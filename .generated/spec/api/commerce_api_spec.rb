=begin
#Clerk Backend API

#The Clerk REST Backend API, meant to be accessed by backend servers.  ### Versions  When the API changes in a way that isn't compatible with older versions, a new version is released. Each version is identified by its release date, e.g. `2021-02-05`. For more information, please see [Clerk API Versions](https://clerk.com/docs/versioning/available-versions).  Please see https://clerk.com/docs for more information.

The version of the OpenAPI document: 2021-02-05
Contact: support@clerk.com
Generated by: https://openapi-generator.tech
Generator version: unset

=end

require 'spec_helper'
require 'json'

# Unit tests for ClerkHttpClient::CommerceApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'CommerceApi' do
  before do
    # run before each test
    @api_instance = ClerkHttpClient::CommerceApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CommerceApi' do
    it 'should create an instance of CommerceApi' do
      expect(@api_instance).to be_instance_of(ClerkHttpClient::CommerceApi)
    end
  end

  # unit tests for get_commerce_plan_list
  # List all commerce plans
  # Returns a list of all commerce plans for the instance. The plans are returned sorted by creation date, with the newest plans appearing first. This includes both free and paid plans. Pagination is supported.
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :paginated Whether to paginate the results. If true, the results will be paginated. If false, the results will not be paginated.
  # @option opts [Integer] :limit Applies a limit to the number of results returned. Can be used for paginating the results together with &#x60;offset&#x60;.
  # @option opts [Integer] :offset Skip the first &#x60;offset&#x60; results when paginating. Needs to be an integer greater or equal to zero. To be used in conjunction with &#x60;limit&#x60;.
  # @return [PaginatedCommercePlanResponse]
  describe 'get_commerce_plan_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
