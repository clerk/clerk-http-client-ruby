=begin
#Clerk Backend API

#The Clerk REST Backend API, meant to be accessed by backend servers.  ### Versions  When the API changes in a way that isn't compatible with older versions, a new version is released. Each version is identified by its release date, e.g. `2021-02-05`. For more information, please see [Clerk API Versions](https://clerk.com/docs/versioning/available-versions).  Please see https://clerk.com/docs for more information.

The version of the OpenAPI document: 2021-02-05
Contact: support@clerk.com
Generated by: https://openapi-generator.tech
Generator version: unset

=end

require 'spec_helper'
require 'json'

# Unit tests for ClerkHttpClient::M2MTokensApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'M2MTokensApi' do
  before do
    # run before each test
    @api_instance = ClerkHttpClient::M2MTokensApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of M2MTokensApi' do
    it 'should create an instance of M2MTokensApi' do
      expect(@api_instance).to be_instance_of(ClerkHttpClient::M2MTokensApi)
    end
  end

  # unit tests for create_m2_m_token
  # Create a M2M Token
  # Creates a new M2M Token. Must be authenticated via a Machine Secret Key.
  # @param create_m2_m_token_request 
  # @param [Hash] opts the optional parameters
  # @return [CreateM2MToken201Response]
  describe 'create_m2_m_token test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_m2_m_tokens
  # Get M2M Tokens
  # Fetches M2M tokens for a specific machine.  This endpoint can be authenticated by either a Machine Secret Key or by a Clerk Secret Key.  - When fetching M2M tokens with a Machine Secret Key, only tokens associated with the authenticated machine can be retrieved. - When fetching M2M tokens with a Clerk Secret Key, tokens for any machine in the instance can be retrieved.
  # @param subject 
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :revoked 
  # @option opts [Boolean] :expired 
  # @option opts [Float] :limit 
  # @option opts [Float] :offset 
  # @return [GetM2MTokens200Response]
  describe 'get_m2_m_tokens test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for revoke_m2_m_token
  # Revoke a M2M Token
  # Revokes a M2M Token.  This endpoint can be authenticated by either a Machine Secret Key or by a Clerk Secret Key.  - When revoking a M2M Token with a Machine Secret Key, the token must managed by the Machine associated with the Machine Secret Key. - When revoking a M2M Token with a Clerk Secret Key, any token on the Instance can be revoked.
  # @param m2m_token_id 
  # @param revoke_m2_m_token_request 
  # @param [Hash] opts the optional parameters
  # @return [GetM2MTokens200ResponseM2mTokensInner]
  describe 'revoke_m2_m_token test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for verify_m2_m_token
  # Verify a M2M Token
  # Verifies a M2M Token.  This endpoint can be authenticated by either a Machine Secret Key or by a Clerk Secret Key.  - When verifying a M2M Token with a Machine Secret Key, the token must be granted access to the Machine associated with the Machine Secret Key. - When verifying a M2M Token with a Clerk Secret Key, any token on the Instance can be verified.
  # @param verify_m2_m_token_request 
  # @param [Hash] opts the optional parameters
  # @return [GetM2MTokens200ResponseM2mTokensInner]
  describe 'verify_m2_m_token test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
