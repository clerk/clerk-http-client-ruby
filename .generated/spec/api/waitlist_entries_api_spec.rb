=begin
#Clerk Backend API

#The Clerk REST Backend API, meant to be accessed by backend servers.  ### Versions  When the API changes in a way that isn't compatible with older versions, a new version is released. Each version is identified by its release date, e.g. `2021-02-05`. For more information, please see [Clerk API Versions](https://clerk.com/docs/backend-requests/versioning/overview).   Please see https://clerk.com/docs for more information.

The version of the OpenAPI document: v1
Contact: support@clerk.com
Generated by: https://openapi-generator.tech
Generator version: unset

=end

require 'spec_helper'
require 'json'

# Unit tests for ClerkHttpClient::WaitlistEntriesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'WaitlistEntriesApi' do
  before do
    # run before each test
    @api_instance = ClerkHttpClient::WaitlistEntriesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of WaitlistEntriesApi' do
    it 'should create an instance of WaitlistEntriesApi' do
      expect(@api_instance).to be_instance_of(ClerkHttpClient::WaitlistEntriesApi)
    end
  end

  # unit tests for create_waitlist_entry
  # Create a waitlist entry
  # Creates a new waitlist entry for the given email address. If the email address is already on the waitlist, no new entry will be created and the existing waitlist entry will be returned.
  # @param [Hash] opts the optional parameters
  # @option opts [CreateWaitlistEntryRequest] :create_waitlist_entry_request 
  # @return [WaitlistEntry]
  describe 'create_waitlist_entry test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_waitlist_entries
  # List all waitlist entries
  # Retrieve a list of waitlist entries for the instance. Entries are ordered by creation date in descending order by default. Supports filtering by email address or status and pagination with limit and offset parameters.
  # @param [Hash] opts the optional parameters
  # @option opts [Float] :limit Applies a limit to the number of results returned. Can be used for paginating the results together with &#x60;offset&#x60;.
  # @option opts [Float] :offset Skip the first &#x60;offset&#x60; results when paginating. Needs to be an integer greater or equal to zero. To be used in conjunction with &#x60;limit&#x60;.
  # @option opts [String] :query Filter waitlist entries by email address
  # @option opts [String] :status Filter waitlist entries by their status
  # @option opts [String] :order_by Specify the order of results. Supported values are: - &#x60;created_at&#x60; - &#x60;email_address&#x60; - &#x60;invited_at&#x60;  Use &#x60;+&#x60; for ascending or &#x60;-&#x60; for descending order. Defaults to &#x60;-created_at&#x60;.
  # @return [ListWaitlistEntries200Response]
  describe 'list_waitlist_entries test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
