=begin
#Clerk Backend API

#The Clerk REST Backend API, meant to be accessed by backend servers.  ### Versions  When the API changes in a way that isn't compatible with older versions, a new version is released. Each version is identified by its release date, e.g. `2021-02-05`. For more information, please see [Clerk API Versions](https://clerk.com/docs/backend-requests/versioning/overview).   Please see https://clerk.com/docs for more information.

The version of the OpenAPI document: v1
Contact: support@clerk.com
Generated by: https://openapi-generator.tech
Generator version: 7.9.0

=end

require 'spec_helper'
require 'json'

# Unit tests for ClerkHttpClient::OrganizationMembershipsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'OrganizationMembershipsApi' do
  before do
    # run before each test
    @api_instance = ClerkHttpClient::OrganizationMembershipsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of OrganizationMembershipsApi' do
    it 'should create an instance of OrganizationMembershipsApi' do
      expect(@api_instance).to be_instance_of(ClerkHttpClient::OrganizationMembershipsApi)
    end
  end

  # unit tests for create_organization_membership
  # Create a new organization membership
  # Adds a user as a member to the given organization. Only users in the same instance as the organization can be added as members.  This organization will be the user&#39;s [active organization] (https://clerk.com/docs/organizations/overview#active-organization) the next time they create a session, presuming they don&#39;t explicitly set a different organization as active before then.
  # @param organization_id The ID of the organization where the new membership will be created
  # @param create_organization_membership_request 
  # @param [Hash] opts the optional parameters
  # @return [OrganizationMembership]
  describe 'create_organization_membership test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_organization_membership
  # Remove a member from an organization
  # Removes the given membership from the organization
  # @param organization_id The ID of the organization the membership belongs to
  # @param user_id The ID of the user that this membership belongs to
  # @param [Hash] opts the optional parameters
  # @return [OrganizationMembership]
  describe 'delete_organization_membership test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for instance_get_organization_memberships
  # Get a list of all organization memberships within an instance.
  # Retrieves all organization user memberships for the given instance.
  # @param [Hash] opts the optional parameters
  # @option opts [Float] :limit Applies a limit to the number of results returned. Can be used for paginating the results together with &#x60;offset&#x60;.
  # @option opts [Float] :offset Skip the first &#x60;offset&#x60; results when paginating. Needs to be an integer greater or equal to zero. To be used in conjunction with &#x60;limit&#x60;.
  # @option opts [String] :order_by Sorts organizations memberships by phone_number, email_address, created_at, first_name, last_name or username. By prepending one of those values with + or -, we can choose to sort in ascending (ASC) or descending (DESC) order.
  # @return [OrganizationMemberships]
  describe 'instance_get_organization_memberships test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_organization_memberships
  # Get a list of all members of an organization
  # Retrieves all user memberships for the given organization
  # @param organization_id The organization ID.
  # @param [Hash] opts the optional parameters
  # @option opts [Float] :limit Applies a limit to the number of results returned. Can be used for paginating the results together with &#x60;offset&#x60;.
  # @option opts [Float] :offset Skip the first &#x60;offset&#x60; results when paginating. Needs to be an integer greater or equal to zero. To be used in conjunction with &#x60;limit&#x60;.
  # @option opts [String] :order_by Sorts organizations memberships by phone_number, email_address, created_at, first_name, last_name or username. By prepending one of those values with + or -, we can choose to sort in ascending (ASC) or descending (DESC) order.\&quot;
  # @return [OrganizationMemberships]
  describe 'list_organization_memberships test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_organization_membership
  # Update an organization membership
  # Updates the properties of an existing organization membership
  # @param organization_id The ID of the organization the membership belongs to
  # @param user_id The ID of the user that this membership belongs to
  # @param update_organization_membership_request 
  # @param [Hash] opts the optional parameters
  # @return [OrganizationMembership]
  describe 'update_organization_membership test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_organization_membership_metadata
  # Merge and update organization membership metadata
  # Update an organization membership&#39;s metadata attributes by merging existing values with the provided parameters. Metadata values will be updated via a deep merge. Deep means that any nested JSON objects will be merged as well. You can remove metadata keys at any level by setting their value to &#x60;null&#x60;.
  # @param organization_id The ID of the organization the membership belongs to
  # @param user_id The ID of the user that this membership belongs to
  # @param update_organization_membership_metadata_request 
  # @param [Hash] opts the optional parameters
  # @return [OrganizationMembership]
  describe 'update_organization_membership_metadata test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
